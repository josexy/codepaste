basePath: /api/v1
definitions:
  paste.CommonCreateService:
    properties:
      content:
        minLength: 1
        type: string
      expire_second:
        type: integer
      lang:
        maxLength: 10
        type: string
      password:
        maxLength: 20
        type: string
      title:
        maxLength: 25
        type: string
    required:
    - content
    type: object
  paste.CreateService:
    properties:
      content:
        minLength: 1
        type: string
      expire_second:
        type: integer
      lang:
        maxLength: 10
        type: string
      password:
        maxLength: 20
        type: string
      private:
        type: boolean
      title:
        maxLength: 25
        type: string
    required:
    - content
    type: object
  paste.UpdateService:
    properties:
      content:
        minLength: 1
        type: string
      lang:
        maxLength: 10
        type: string
      password:
        maxLength: 20
        type: string
      private:
        type: boolean
      title:
        maxLength: 25
        type: string
    required:
    - content
    type: object
  serializer.Response:
    properties:
      code:
        description: 错误码
        type: integer
      data:
        description: 返回此次请求响应的数据
      msg:
        description: 错误码可读消息
        type: string
    type: object
  user.LoginService:
    properties:
      password:
        maxLength: 20
        minLength: 8
        type: string
      username:
        maxLength: 20
        minLength: 5
        type: string
    required:
    - password
    - username
    type: object
  user.RegisterService:
    properties:
      nickname:
        maxLength: 20
        minLength: 3
        type: string
      password:
        maxLength: 20
        minLength: 8
        type: string
      username:
        maxLength: 20
        minLength: 5
        type: string
    required:
    - nickname
    - password
    - username
    type: object
  user.UpdateService:
    properties:
      nickname:
        maxLength: 20
        minLength: 3
        type: string
      password:
        maxLength: 20
        minLength: 8
        type: string
    required:
    - nickname
    - password
    type: object
host: 127.0.0.1:10086
info:
  contact:
    email: josephxrays@gmail.com
    name: josexy
    url: http://github.com/josexy
  description: 使用 Go-Swagger 自动生成的接口文档
  license:
    name: MIT
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Swagger 接口文档
  version: "1.0"
paths:
  /auth/pastes:
    get:
      description: 获取所有便利贴
      parameters:
      - description: JWT
        in: header
        name: Authorization
        required: true
        type: string
      - description: page
        in: query
        name: page
        type: string
      - description: page_size
        in: query
        name: page_size
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/serializer.Response'
      security:
      - BearerAuth: []
      summary: 获取所有便利贴
      tags:
      - PASTES
    post:
      consumes:
      - application/json
      description: 创建便利贴
      parameters:
      - description: 信息
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/paste.CreateService'
      - description: JWT
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/serializer.Response'
      security:
      - BearerAuth: []
      summary: 创建便利贴
      tags:
      - PASTES
  /auth/pastes/:id:
    delete:
      consumes:
      - application/json
      description: 删除便利贴
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: JWT
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/serializer.Response'
      security:
      - BearerAuth: []
      summary: 删除便利贴
      tags:
      - PASTES
    put:
      consumes:
      - application/json
      description: 更新便利贴
      parameters:
      - description: 信息
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/paste.UpdateService'
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: JWT
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/serializer.Response'
      security:
      - BearerAuth: []
      summary: 更新便利贴
      tags:
      - PASTES
  /auth/pastes/:key:
    get:
      description: 获取便利贴
      parameters:
      - description: key
        in: path
        name: key
        required: true
        type: string
      - description: 密码
        in: query
        name: password
        type: string
      - description: JWT
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/serializer.Response'
      security:
      - BearerAuth: []
      summary: 获取便利贴
      tags:
      - PASTES
  /auth/user:
    get:
      description: 获取用户信息
      parameters:
      - description: JWT
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/serializer.Response'
      security:
      - BearerAuth: []
      summary: 获取用户信息
      tags:
      - USER
    put:
      consumes:
      - application/json
      description: 修改用户信息
      parameters:
      - description: 用户信息
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/user.UpdateService'
      - description: JWT
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/serializer.Response'
      security:
      - BearerAuth: []
      summary: 修改用户信息
      tags:
      - USER
  /paste:
    post:
      description: 创建便利贴
      parameters:
      - description: 信息
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/paste.CommonCreateService'
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/serializer.Response'
      summary: 创建便利贴
      tags:
      - PUBLIC
  /paste/{key}:
    get:
      description: 获取便利贴
      parameters:
      - description: key
        in: path
        name: key
        required: true
        type: string
      - description: 密码
        in: query
        name: password
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/serializer.Response'
      summary: 获取便利贴
      tags:
      - PUBLIC
  /ping:
    get:
      description: ping 测试
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/serializer.Response'
      summary: ping 测试
      tags:
      - PING
  /user/login:
    post:
      consumes:
      - application/json
      description: 用户登陆
      parameters:
      - description: 用户信息
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/user.LoginService'
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/serializer.Response'
        "401":
          description: 失败
          schema:
            $ref: '#/definitions/serializer.Response'
      summary: 用户登陆
      tags:
      - USER
  /user/register:
    post:
      consumes:
      - application/json
      description: 用户注册
      parameters:
      - description: 用户信息
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/user.RegisterService'
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/serializer.Response'
      summary: 用户注册
      tags:
      - USER
swagger: "2.0"
